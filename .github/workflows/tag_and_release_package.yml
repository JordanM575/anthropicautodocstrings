name: release

on: 
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: warning

jobs:
  Build_And_Release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
          
      - name: Install Poetry
        run: |
          python -m pip install poetry
          
      - name: Build source and wheel distributions with Poetry
        run: |
          poetry build
          
      - name: Get package version from Poetry
        run: |
          version=$(poetry version --short)
          echo "version=$version" >> $GITHUB_ENV
        shell: bash
        id: version
        
      - uses: rickstaa/action-create-tag@v1
        name: Create Tag
        with:
          tag: v${{ env.version }}
          message: Release ${{ env.version }}
      - name: Create release
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.MY_PERSONAL_TOKEN }}
          script: |
            try {
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: "Release v" + process.env.version,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: "v" + process.env.version,
              });
            } catch (error) {
              core.setFailed(error.message);
            }
  Publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v1.17
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}